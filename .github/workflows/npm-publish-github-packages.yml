name: Publish Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1

      # run any `bun` or `bunx` command
      - run: bun install
      - run: bun run compile

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - uses: actions/checkout@v3
        with: 
          repository: Mistyttm/aws-file-resizificator-client
          path: resources/front-end
      
      - run: bun i
      - run: cd node-modules/fluent-ffmpeg && cp -r ./lib/* ./lib-cov/ && cd .. && cd ..
      - run: bun compile
      - run: cd resources/front-end && bun i && bun run build
      - run: cp -r ./dist/* ../../dist/
      - run: cd .. && cd ..

      # Zip the entire dist folder
      - name: Zip Dist Folder
        run: zip -r dist.zip dist

      # Create a release and upload the zip file
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: build.zip
          asset_content_type: application/zip
